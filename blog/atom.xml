<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://docs.hashed.network/blog</id>
    <title>Hashed Network Documentation Blog</title>
    <updated>2022-10-23T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://docs.hashed.network/blog"/>
    <subtitle>Hashed Network Documentation Blog</subtitle>
    <icon>https://docs.hashed.network/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[Polkadot Signer Usability]]></title>
        <id>signer</id>
        <link href="https://docs.hashed.network/blog/signer"/>
        <updated>2022-10-23T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Polkadot Signer Usability]]></summary>
        <content type="html"><![CDATA[<p>Onboarding onto Polkadot is hard and there are several areas of friction that users run into. This article identifies three of them and explains the solution that Hashed Network uses to address them.</p><p>I did not develop these core protocols, but we have built many dapps with them on other blockchains with technical and user success.  I seek feedback on the technical architecture to ensure there are no foundational flaws, any reasons why it wouldn't work with Polkadot, or advice and support on implementation. </p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="the-native-token-problem">The Native Token Problem<a class="hash-link" href="#the-native-token-problem" title="Direct link to heading">​</a></h3><h4 class="anchor anchorWithStickyNavbar_LWe7" id="problem">Problem<a class="hash-link" href="#problem" title="Direct link to heading">​</a></h4><p>Like Ethereum, you need the L1 token to do anything on Polkadot. However, in general, users don't begin their journey with the idea of having DOT and trying to find something to do with it. They start with a problem or application (dapp) and have a desire to use it, and then realize there is another step of having to buy DOT, which creates another separate thread of painful friction. </p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="solution">Solution<a class="hash-link" href="#solution" title="Direct link to heading">​</a></h4><p>The Network's solution is to create Sybil-attack resistant methods for a faucet, such as verify SMS. SMS verification allows for a free initial faucet amount. It privately keeps a list of number hashes to avoid mis-use and also shields against VoIP SMS. Other methods could be verifying through a social network site such as Twitter or Github, which typically have their own Sybil protection. </p><p>Whitelisted oracles/origins that are allowed to use the initial faucet are voted in via chain governance, and those origins are allowed to use the extrinsic for new account creation and initial faucet. These oracles/origins, such as wallets or applications, will need to provide evidence to voters that they have Sybil protection in place. </p><p>Allowance for these users will be allocated at genesis and balanced via governance.</p><p><img loading="lazy" alt="image" src="/assets/images/signer-0d11e2a946a0907289d0ea7b40fc0d61.png" width="713" height="701" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="the-install-something-problem">The Install-something Problem<a class="hash-link" href="#the-install-something-problem" title="Direct link to heading">​</a></h3><h4 class="anchor anchorWithStickyNavbar_LWe7" id="problem-1">Problem<a class="hash-link" href="#problem-1" title="Direct link to heading">​</a></h4><p>A <em>larger-than-you-think number</em> of users reach the point of wanting to use web3 and then turn away when they are asked to install a new app on mobile or a browser extension. That is too much friction for a large segment of users, the so-called <em>web3 curious</em> or <em>experimenters</em>. </p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="solution-1">Solution<a class="hash-link" href="#solution-1" title="Direct link to heading">​</a></h4><p>Don't require the user to install anything. Hashed Network supports "Login with Google", which uses the Google Drive API to save the user's key, access it, and sign and broadcast directly in the browser. </p><p>Is it great security? No, because Google has access to the key. It is a compromise. As the user gets hooked, there are easy migration paths to improved self-custody with an installed signer.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="signing-ergonomics-problem---part-1">Signing Ergonomics Problem - Part 1<a class="hash-link" href="#signing-ergonomics-problem---part-1" title="Direct link to heading">​</a></h3><h4 class="anchor anchorWithStickyNavbar_LWe7" id="problem-2">Problem<a class="hash-link" href="#problem-2" title="Direct link to heading">​</a></h4><p>The desktop-to-mobile signing experience lacks continuity. <a href="https://github.com/paritytech/parity-signer" target="_blank" rel="noopener noreferrer">Parity Signer</a> is a fantastic air-gapped wallet, but offline wallets are not practical for day-to-day usability. Some of the other wallets require that users go into the application browser, select from a list of applications or enter an address. </p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="solution-2">Solution<a class="hash-link" href="#solution-2" title="Direct link to heading">​</a></h4><p>The more natural flow for users is to access an application via a link that opens in their <strong>default</strong> web browser. As the user navigates to Login and sign transactions, they are prompted to do so. </p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="signing-ergonomics-problem---part-2">Signing Ergonomics Problem - Part 2<a class="hash-link" href="#signing-ergonomics-problem---part-2" title="Direct link to heading">​</a></h3><h4 class="anchor anchorWithStickyNavbar_LWe7" id="problem-3">Problem<a class="hash-link" href="#problem-3" title="Direct link to heading">​</a></h4><p>The related continuity problem is using the same account on both desktop and mobile requires moving the key. </p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="solution-3">Solution<a class="hash-link" href="#solution-3" title="Direct link to heading">​</a></h4><p>Keep the key on the device only. When the mobile browser needs a signature, it sends a deep link (similar to a <code>mailto:</code> link) to the operating system to open a signer app. The transaction signature request is sent to the signer where the user approves and the application broadcasts it.</p><p>When a user access an application on desktop, they are prompted to login by scanning a QR code. The user opens their device and scans the QR code using the default camera app. The user taps the QR code, scans a <code>login</code> payload, and broadcasts the signature back to the browser over the network (not via webcam like Parity Signer). </p><p>This step connects the browser and device for the duration of a configurable session, which can be managed on the device. When the user performs an action in the application that requires a transaction signature, it is sent to the device over the network as a push notification. The payload is signed, signature is passed back to the application, where it is broadcast. </p><p>This feature requires a small intermediate relay, which we are investigating building directly into the Substrate node. </p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="action-plan">Action Plan<a class="hash-link" href="#action-plan" title="Direct link to heading">​</a></h2><p>Part 1 above is made possible by a <a href="https://github.com/greymass/eosio-signing-request#encoding-a-signing-request" target="_blank" rel="noopener noreferrer">signing request protocol</a> that can be encoded in the application and decoded by the signer. </p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">- Should we add support for Substrate transactions? </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Part 2 above is made possible by a <a href="https://github.com/greymass/anchor-link" target="_blank" rel="noopener noreferrer">signature provider protocol</a> that is an open standard with support end-to-end encryption, persistent account sessions, and identity proofs. </p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">- Should we add support for Substrate transactions?</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>Max Gravitt</name>
            <uri>https://github.com/3yekn</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Native Bitcoin Vaults]]></title>
        <id>nbv-m2</id>
        <link href="https://docs.hashed.network/blog/nbv-m2"/>
        <updated>2022-10-21T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Native Bitcoin Vaults Milestone 2 Submitted]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="summary">Summary<a class="hash-link" href="#summary" title="Direct link to heading">​</a></h2><p>There are 3 key features of Native Bitcoin Vaults. </p><ol><li>Flexible policy engine for managing bitcoin with business rules<ul><li>Uses Partially-Signed Bitcoin Transactions (PSBTs) to roll-up bitcoin spending proposals and approvals</li><li>Orchestrated by Substrate, integrated with bitcoin via off-chain workers</li><li>Bitcoin signing compatible with many convenient signers, from highly secured airgapped signers to not-very-secure 'Sign with Google' for the web3 experimenter.</li></ul></li><li>Verifiable receiving addresses<ul><li>Bitcoin senders can independently verify a receiving address for a specific vault, such as an elected council based on the democracy pallet. </li><li>Generate a new receiving address for each UTXO</li></ul></li><li>Integration with other Hashed Network features <ul><li>Triple entry accounting platform allows businesses to natively assign bitcoin sends and receipts to General Ledger accounts such as Income and Expenses.</li><li>Integration with Confidential Documents, which allows users to securely encrypt, save, and share data that corresponds to a vault or journal entries. </li></ul></li></ol><p>There are 3 key 'reasons to believe' NBV is useful. </p><ol><li>More businesses are adopting bitcoin on their balance sheet. </li><li>NBV is real, simple, pure bitcoin. That's what people want. </li><li>The market for approval and payment tools is robust.</li></ol><p><img loading="lazy" alt="image" src="/assets/images/nbv-cover-image-0ec24f52bc15be97ef4c5031149a2c27.png" width="635" height="507" class="img_ev3q"></p><h1>Features</h1><h3 class="anchor anchorWithStickyNavbar_LWe7" id="flexible-policy-engine">Flexible Policy Engine<a class="hash-link" href="#flexible-policy-engine" title="Direct link to heading">​</a></h3><p>Bitcoin is a UTXO-based blockchain (as opposed to account-based, like Polkadot), and in the early days, we would send bitcoin to the same address over and over again. However, it is more privacy-preserving to generate a new receiving address for every transaction, which has become the norm now. Each receiving address is transformed into a UTXO as soon as it receives a payment. </p><p>Each UTXO has a pre-determined, Substrate-orchestrated configuration for set of potential signers and threshold. This creates a lot of flexibility for use cases such as budgeting funds to sub-groups or task forces, paying invoices based on requested drawdowns, and using higher security signers for larger UTXOs.</p><p>To spend the UTXO, Substrate compiles the Paritally Signed Bitcoin Transactions (PSBTs) together, and when ready, broadcasts it to the Bitcoin network. PSBTs were introduced in <a href="https://github.com/bitcoin/bips/blob/master/bip-0174.mediawiki" target="_blank" rel="noopener noreferrer">BIP-174</a> and are implemented in many wallets including Bitcoin Core. NBV also uses output descriptors extensively, which is also a broadly supported standard for describing UTXOs in a composable fashion.</p><p>Using standards like these means that there are many available signers, such as ColdCard, BlueWallet, or libraries such as <a href="https://bitcoindevkit.org/" target="_blank" rel="noopener noreferrer">Bitcoin Dev Kit</a>. Users can also sign with a key stored in Confidential Documents (sign via polkadot.js), our own Hashed Wallet, or even 'Sign with Google' for the web3 experimenter or casual user.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="verifiable-receiving-addresses">Verifiable Receiving Addresses<a class="hash-link" href="#verifiable-receiving-addresses" title="Direct link to heading">​</a></h3><p>There are two primary attacks as it relates to bitcoin. Either a hacker finds your secret, or the sender is tricked into sending bitcoin to an address for which the hacker has the secret. NBV addresses the latter. </p><p>The generated receiving addresses can be cryptographically verified by senders from other vaults or senders using any compatible bitcoin wallet. For example, if a set of treasurers were elected using the <code>democracy</code> pallet, they could begin receiving contributions immediately and seamlessly rather than the worrisome trouble of having them coordinate together separately to generate receiving addresses. </p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="integration-with-hashed-network-features">Integration with Hashed Network Features<a class="hash-link" href="#integration-with-hashed-network-features" title="Direct link to heading">​</a></h3><p>Verifiability is secure. However, some bitcoin vaults wish to remain private. NBV supports integration with Confidential Documents, which allows users to safely encrypt and share data such as the output descriptors, wallet metadata, receiving addresses, and vault documents. </p><p>NBV also integrates with the triple-entry accounting tools on Hashed Network. This platform allows businesses to natively assign bitcoin sends and receipts to General Ledger accounts such as Assets and Expenses, enabling Income Statements and Balance Sheets.</p><h1>Reasons to believe</h1><p>Most bitcoin layers that I've seen on programmable blockchains, such as Ethereum and Polkadot, have an element of custody/trust, peg tokens, or collateral backing. They are usually engineered by people much smarter than me, and I'm not qualified to opine on how secure they are. </p><p>I think people want real bitcoin though. Real, simple, pure bitcoin. Especially for large amounts often seen in business treasuries or managed by governance teams.</p><p>In 2021, companies such as Tesla and Microstrategy adopted bitcoin as a treasury asset, many of which described in this <a href="https://cointelegraph.com/news/the-bitcoin-boom-the-future-of-the-company-balance-sheet" target="_blank" rel="noopener noreferrer">Cointelegraph article</a>. We believe this trend will continue and accelerate in the coming years. </p><p>Valuations for companies such as Fireblocks, <a href="https://www.prnewswire.com/news-releases/fireblocks-raises-550-million-in-series-e-funding-to-become-the-highest-valued-digital-asset-infrastructure-provider-301469630.html" target="_blank" rel="noopener noreferrer">which raised $550 million on a valuation of $8 billion</a>, suggest that there is a market for payment approval, coordination, and broadcast.</p><div style="text-align:center"><iframe width="560" height="315" src="https://www.youtube.com/embed/kn_eqC07wao" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"></iframe></div><h1>Road Map</h1><p>There are 3 key focus areas on the road map: </p><ol><li>Short term focus is usability for basic treasury activities </li><li>Migrate from off-chain worker BDK-integration to WASM</li><li>Integrate additional signers</li></ol>]]></content>
        <author>
            <name>Max Gravitt</name>
            <uri>https://github.com/3yekn</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Treasury Proposal Approved]]></title>
        <id>dot-treasury-pallets</id>
        <link href="https://docs.hashed.network/blog/dot-treasury-pallets"/>
        <updated>2022-06-15T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[The proposal titled Graded Assets and Fractional Uniques was approved with unanimous support.]]></summary>
        <content type="html"><![CDATA[<p>The proposal titled <a href="https://polkadot.polkassembly.io/motion/217" target="_blank" rel="noopener noreferrer">Graded Assets and Fractional Uniques</a> was approved with unanimous support.</p>]]></content>
        <author>
            <name>Max Gravitt</name>
            <uri>https://github.com/3yekn</uri>
        </author>
        <author>
            <name>Augusto Lara</name>
            <uri>https://github.com/augustolara</uri>
        </author>
        <category label="polkadot" term="polkadot"/>
        <category label="grant" term="grant"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[W3F Grant M1 Approved]]></title>
        <id>w3f-nbv-m1</id>
        <link href="https://docs.hashed.network/blog/w3f-nbv-m1"/>
        <updated>2022-06-14T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[The first milestone of the Web3 Foundation grant for Native Bitcoin Vaults has been approved.]]></summary>
        <content type="html"><![CDATA[<p>The first milestone of the Web3 Foundation grant for Native Bitcoin Vaults has been approved.</p>]]></content>
        <author>
            <name>Max Gravitt</name>
            <uri>https://github.com/3yekn</uri>
        </author>
        <category label="partners" term="partners"/>
        <category label="W3F" term="W3F"/>
        <category label="bitcoin" term="bitcoin"/>
    </entry>
</feed>